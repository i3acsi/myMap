package com.gasevskyV.interview;

import org.junit.Before;
import org.junit.Test;

/*
Допустим есть база данных скриптов.
Каждый скрипт имеет произвольное количество зависимостей.
Зависимости выражаются в виде списка scriptIds, которые должны быть выполнены перед заданным сценарием.
Циклические зависимости отсутствуют.
Придумать алгоритм, чтобы запускать все сценарии в разумном порядке.
 */

import java.util.ArrayList;
import java.util.List;


import static org.hamcrest.core.Is.is;
import static org.junit.Assert.*;

public class VulnerabilityScriptTest {
    List<VulnerabilityScript> list;

    @Before
    public void init() {
        list = new ArrayList<>();
        list.add(new VulnerabilityScript(26, List.of(16, 12, 24)));
        list.add(new VulnerabilityScript(24, List.of(9, 10)));
        list.add(new VulnerabilityScript(16, List.of(7, 6)));
        list.add(new VulnerabilityScript(12, List.of(20)));
        list.add(new VulnerabilityScript(10, List.of(1, 2, 4)));
    }

    @Test
    public void test() {
        ScriptDB scriptDB = new ScriptDB();
        List<Integer> result = scriptDB.order(list);
        System.out.println(result);
        //assertThat(result, is(List.of(7, 6, 16, 20, 12, 9, 1, 2, 4, 10, 24, 26)));
        assertThat(result, is(List.of(4, 2, 1, 10, 9, 24, 20, 12, 6, 7, 16, 26)));
    }
}